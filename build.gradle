/**
 * Copyright 2020 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.versions = [
        'androidx': [
            'appcompat': '1.1.0',
            'espresso': '3.2.0',
            'lifecycle': '2.2.0',
            'test': '1.2.0',
            'junit': '1.1.1',
        ],
        'junit': '4.12',
        'kotlin': '1.3.61',
        'kotlinxCoroutines': '1.3.2',
        'mockito': '3.0.0',
        'mockitoKotlin': '2.2.0',
        'playServicesMaps': '17.0.0',
    ]

    ext.deps = [
        'androidx': [
            'appcompat': "androidx.appcompat:appcompat:$versions.androidx.appcompat",
            'espresso': "androidx.test.espresso:espresso-core:$versions.androidx.espresso",
            'lifecycleRunTime': "androidx.lifecycle:lifecycle-runtime-ktx:$versions.androidx.lifecycle",
            'lifecycleExt': "androidx.lifecycle:lifecycle-extensions:$versions.androidx.lifecycle",
            'test': "androidx.test:core:$versions.androidx.test",
            'junit': "androidx.test.ext:junit:$versions.androidx.junit"
        ],
        'junit': "junit:junit:$versions.junit",
        'kotlin': "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
        'kotlinxCoroutines': "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinxCoroutines",
        'mockito': "org.mockito:mockito-core:$versions.mockito",
        'mockitoKotlin': "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin",
        'playServicesMaps': "com.google.android.gms:play-services-maps:$versions.playServicesMaps",
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.10.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

/**
 * Improve build server performance by allowing disabling of pre-dexing
 * (see http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.)
 */
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects { project ->
    project.plugins.whenPluginAdded { plugin ->
        if (rootProject.ext.has('preDexLibs')) {
            if ("com.android.build.gradle.AppPlugin" == plugin.class.name) {
                project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
            } else if ("com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
                project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
            }
        }
    }

    if (project.name == 'demo') {
        return
    }

    apply plugin: 'com.android.library'
    apply plugin: 'jacoco-android'

    jacoco {
        toolVersion = "0.8.4"
    }

    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
    }

}
